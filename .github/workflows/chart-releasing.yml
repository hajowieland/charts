name: Chart-Releasing

on:
  workflow_call:
    secrets:
      GPG_PRIVATE_KEY_BASE64:
        required: true
      GPG_PRIVATE_KEY_PASSPHRASE:
        required: true
      GPG_PRIVATE_KEY_UID:
        required: true
  workflow_dispatch:

jobs:
  release2github:
    permissions:
      contents: write
      packages: write
    runs-on: ubuntu-latest
    steps:
      - name: Checkout git repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          persist-credentials: false
          ref: ${{ github.head_ref }}

      - name: Configure Git
        run: |
          git config user.name "$GITHUB_ACTOR"
          git config user.email "$GITHUB_ACTOR@users.noreply.github.com"

      - name: Install Helm
        uses: azure/setup-helm@v4
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

#      - name: Add Helm repositories
#        run: |
#          helm repo add hajowieland https://charts.wieland.tech

      - name: Import GPG key
        run: |
          echo "${{ secrets.GPG_PRIVATE_KEY_BASE64 }}" | base64 -d | gpg --dearmor --output keyring.gpg
          echo "${{ secrets.GPG_PRIVATE_KEY_PASSPHRASE }}" > passphrase-file.txt

      - name: Run chart-releaser
        uses: helm/chart-releaser-action@v1.7.0
        with:
          config: ./.github/config/chart-releasing.yaml
        env:
          CR_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
          CR_KEY: "${{ secrets.GPG_PRIVATE_KEY_UID }}"
          CR_KEYRING: keyring.gpg
          CR_PASSPHRASE_FILE: passphrase-file.txt
          CR_SIGN: true

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Run chart-releaser for OCI
        uses: helm/chart-releaser-action@v1.7.0
        with:
          config: ./.github/config/chart-releasing.yaml
          skip_existing: true
          skip_upload: true
        env:
          CR_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
          CR_KEY: "${{ secrets.GPG_PRIVATE_KEY_UID }}"
          CR_KEYRING: keyring.gpg
          CR_PASSPHRASE_FILE: passphrase-file.txt
          CR_SIGN: true

      - name: Push Charts to GHCR
        run: |
          shopt -s nullglob
          packages=(.cr-release-packages/*.tgz)
          shopt -u nullglob

          if [ ${#packages[@]} -eq 0 ]; then
            echo "No new/changed chart packages found in .cr-release-packages. Skipping OCI push."
          else
            echo "Found ${#packages[@]} chart package(s) to push:"
            for pkg in "${packages[@]}"; do
              echo "Pushing ${pkg}..."
              helm push "${pkg}" oci://ghcr.io/${{ github.repository_owner }}
            done
            echo "OCI push completed."
          fi
