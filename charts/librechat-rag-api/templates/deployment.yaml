apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "rag-api.fullname" . }}
  labels:
    {{- include "rag-api.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "rag-api.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
        {{- with .Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "rag-api.labels" . | nindent 8 }}
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "rag-api.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.service.port }}
              protocol: TCP
          livenessProbe:
            {{- toYaml .Values.livenessProbe | nindent 12 }}
          readinessProbe:
            {{- toYaml .Values.readinessProbe | nindent 12 }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            - name: uploads
              mountPath: /app/uploads
            {{- with .Values.volumeMounts }}
            {{- toYaml . | nindent 12 }}
          {{- end }}
          envFrom:
            {{ if .Values.config.envSecrets.secretRef }}
            - secretRef:
                name: {{ .Values.config.envSecrets.secretRef }}
            {{- end }}
            - configMapRef:
                name: {{ include "rag-api.fullname" . }}-env
          env:
            {{- if .Values.postgresSecret.enabled }}
            - name: DB_HOST
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.postgresSecret.secretName }}
                  key: {{ .Values.postgresSecret.hostKey }}
            - name: DB_PORT
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.postgresSecret.secretName }}
                  key: {{ .Values.postgresSecret.portKey }}
            - name: POSTGRES_DB
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.postgresSecret.secretName }}
                  key: {{ .Values.postgresSecret.dbnameKey }}
            {{- if .Values.postgresSecret.userKey }}
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.postgresSecret.secretName }}
                  key: {{ .Values.postgresSecret.userKey }}
            {{- end }}
            {{- if .Values.postgresSecret.passwordKey }}
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.postgresSecret.secretName }}
                  key: {{ .Values.postgresSecret.passwordKey }}
            {{- end }}
            {{- end }}
            - name: RAG_PORT
              value: {{ .Values.service.port | quote }}
            {{- range $secretKeyRef := .Values.config.envSecrets.secretKeyRef }}
            - name: {{ $secretKeyRef.name }}
              valueFrom:
                secretKeyRef:
                  name: {{ $secretKeyRef.secretName }}
                  key: {{ $secretKeyRef.secretKey }}
            {{- end }}
      volumes:
        - name: uploads
          {{- if .Values.persistence.enabled }}
          persistentVolumeClaim:
            claimName: {{ .Values.persistence.existingClaim | default (include "rag-api.fullname" .) }}
          {{- else }}
          emptyDir: { }
          {{- end }}
        {{- with .Values.volumes }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
